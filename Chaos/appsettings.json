{
    "Options": {
        "ChaosOptions": {
            "StagingDirectory": "..\\..\\..\\..\\"
        },
        "ActiveDirectoryCredentialManagerOptions": {
            "Directory": "Data\\Saved",
            "ValidCharactersPattern": "[a-zA-Z0-9 ]+",
            "ValidFormatPattern": "^[a-zA-Z]{3,}$|[a-zA-Z]{3,} ?[a-zA-Z]{3,}",
            "MaxUsernameLength": 12,
            "MinUsernameLength": 3,
            "MaxPasswordLength": 8,
            "MinPasswordLength": 5,
            "ReservedUsernames": [],
            "PhraseFilter": [],
            "HashAlgorithmName": "SHA512"
        },
        "ItemTemplateCacheOptions": {
            "Directory": "Data\\Templates\\Items",
            "FilePattern": "*.json",
            "SearchResultType": "Files"
        },
        "SkillTemplateCacheOptions": {
            "Directory": "Data\\Templates\\Skills",
            "FilePattern": "*.json",
            "SearchResultType": "Files"
        },
        "SpellTemplateCacheOptions": {
            "Directory": "Data\\Templates\\Spells",
            "FilePattern": "*.json",
            "SearchResultType": "Files"
        },
        "MapTemplateCacheOptions": {
            "Directory": "Data\\Templates\\Maps",
            "FilePattern": "*.json",
            "MapDataDirectory": "Data\\MapData",
            "SearchResultType": "Files"
        },
        "MapInstanceCacheOptions": {
            "Directory": "Data\\MapInstances",
            "SearchResultType": "Directories"
        },
        "UserSaveManagerOptions": {
            "Directory": "Data\\Saved"
        },
        "MetafileCacheOptions": {
            "Directory": "Data\\Metafiles",
            "FilePattern": "*.json"
        },
        "MonsterTemplateCacheOptions": {
            "Directory": "Data\\Templates\\Monsters",
            "FilePattern": "*.json",
            "SearchResultType": "Files"
        },
        "LootTableCacheOptions": {
            "Directory": "Data\\LootTables",
            "FilePattern": "*.json",
            "SearchResultType": "Files"
        },
        "LobbyOptions": {
            "HostName": "localhost",
            "Port": 4200,
            "Servers": []
        },
        "LoginOptions": {
            "HostName": "localhost",
            "Port": 4201,
            "WorldRedirect": {
                "HostName": "localhost",
                "Port": 4202
            },
            "StartingMapInstanceId": "Test1",
            "StartingPointStr": "(5, 5)",
            "NoticeMessage": "under construction",
            "ReservedRedirects": []
        },
        "WorldOptions": {
            "HostName": "localhost",
            "Port": 4202,
            "LoginRedirect": {
                "HostName": "localhost",
                "Port": 4201
            },
            "RefreshIntervalMs": 1000,
            "TradeRange": 4,
            "DropRange": 4,
            "PickupRange": 4,
            "UpdatesPerSecond": 30,
            "SaveIntervalMins": 5,
            "MaxGoldHeld": 500000000,
            "MinimumMonsterAc": -99,
            "MaximumMonsterAc": 100,
            "MinimumAislingAc": -90,
            "MaximumAislingAc": 100,
            "MaxLevel": 30
        }
    },
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "System": "Information",
            "Microsoft": "Information"
        },
        "NLog": {
            "throwConfigExceptions": true,
            "targets": {
                "async": false,
                "logfile": {
                    "type": "File",
                    "fileName": "logs\\${shortdate}.log",
                    "layout": "${pad:padding=-30:fixedLength=true:inner=${time}|${uppercase:${level}}}${logger:shortName=true}: ${message} ${exception:format=tostring}"
                    
                },
                "logconsole": {
                    "type": "ColoredConsole",
                    "layout": "${pad:padding=-22:fixedLength=true:inner=${time}|${uppercase:${level}}}${message} ${exception:format=tostring}",
                    "rowHighlightingRules": [
                        {
                            "condition": "level == LogLevel.Fatal",
                            "foregroundColor": "Red",
                            "backgroundColor": "White"
                        },
                        {
                            "condition": "level == LogLevel.Error",
                            "foregroundColor": "Red"
                        },
                        {
                            "condition": "level == LogLevel.Info",
                            "foregroundColor": "White"
                        },
                        {
                            "condition": "level == LogLevel.Debug",
                            "foregroundColor": "Blue"
                        }
                    ]
                }
            },
            "rules": [
                {
                    "logger": "*",
                    "minLevel": "Debug",
                    "writeTo": "logconsole"
                },
                {
                    "logger": "*",
                    "minLevel": "Trace",
                    "writeTo": "logfile"
                }
            ]
        }
    }
}